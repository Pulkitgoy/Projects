import { initClient, getClient } from './client'

beforeEach(() => {
  getClient(true).reset()
})

it('should init correctly the client', () => {
  const client = initClient({
    appId: 'test',
    apiKey: 'test',
  })

  expect(client.isInitialized()).toBe(true)
})

it('should throw an error if some information are missing', async () => {
  const client = initClient({
    appId: 'test',
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  } as any)

  await expect(client.getSdk().generateUserToken({ id: 'test' } as any)).rejects.toThrowError()
})

// it('should send correctly a graphql query', async () => {
//   const client = await initClient({
//     appId: '01840a19-284b-6c64-b416-45487127aa92',
//     apiKey: 'g25lISIZpKQYUC5xNKQgciGpOSEXFZuTTd70C8FEvN0PKR0yKEeAMxxek4IwioKFekO6h1wNpvwiErwqLnUkMqY638A8LwVhAIuG8rK2RlQ9Wmy3SArnU2F3fWbOPx9jDiz5ZrancElrVkiC1jevBPlORJZkXaM5MJodpvP6OjXIczL9w3aonxa26S91cGPklyKoxJ6pccd8y0TSfXfyopKHAkt0FoOI63SQQ9IBaji19pK9vKPwwLjrza46Sl2O',
//   })

//   const response = await client.request(`query { __typename }`)

//   console.log(response)
//   expect(response).toEqual({
//     __typename: 'Query',
//   })
// })
